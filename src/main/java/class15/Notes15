Methods:

    In java, a method is a code or collection of statements that perform a specific task. It is designed
    to perform a particular function or piece of logic within a program. We can create a method and call it
    multiple times from different parts of the program rather than repeating the same block of code in
    multiple places. Methods in java return types (output of a method), for ex: void, String, int, char, etc.
    They can also take parameters (input). Parameters can have primitive and non-primitive.
    The body of the method can contain any logic like, arrays, loops, switch.

Why we should use methods?

    1. Code re-usability
    2. Organize the code
    3. Changing the code becomes easier

How to create methods is java?

==============================================================================================================

Types of variables with respect to scope(coverage, reach, visibility and accessibility)

    There are three types of variables with respect to scope. Local, instance and static variables.

Local variables:

    Local variables are created inside block of codes they can only be accessed with that block.
    For example all the variable that we create inside methods, if statements, switch case statements, loops, etc.

Benefits of local variables:

    1. Local variables stay shorter in the memory, the moment that block of code is done executing
       memory is freed and is available to be re-used.
    2. We can re-use the same name for other variables in other blocks of code

Downside of local variables:

    1. They have limited visibility. They cannot be used outside of the block in which they are created.
    2. Initialization is mandatory for local variables, and failure to do so results in a compilation error.

Instance variables:

    Instance variables are created outside of any block of code like method, loop, if statement, etc.
    But they are inside a class.

Benefits of instance variables:

    1. Instance variables can be used without initialing.
    2. Instance variables  can be shared between all instance methods of a class.

Downside of instance variables:

    1. They tend to occupy the memory for longer as compared to local variables.
    2. The are hard to debug.

Static variables:

    All the instance variables with static keywords are called static variables.

Benefits of static variables:

    1. They can be shared across instance, static methods, and the instances of a class.
    2. Only one memory location is reserved for static variables
       even though we create 1 million objects of that class.

Downside of static variables:

    1. The code can be hard to debug if we don't use the final keyword.
    2. If value is changed anywhere in the code, that gets changed for the complete application.

When we should use local variables:

    *** Always *** whenever possible.

When we should use instance variables:

    1. If we have to share something in more than 1 instance methods.
    2. When we are planning to create multiple objects of a class and these objects can have different
    values for different objects we should go with instance variables.

When we should use static variables:

    1. When we want to share something globally in all the classes methods blocks of code.
    2. Mostly used to create constants. ex: number of months, number of days, value of Pi, value of G, etc.

















































